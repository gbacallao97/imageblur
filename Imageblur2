# image blur 2

class Image

  def initialize(picture)
    @picture = picture
    @row_length = picture.length
    @column_length = picture[0].length
  end

  def output_image
    @picture.each do |pixel|
      puts pixel.join()
    end
  end

  def transform(row_index, column_index)
    @picture[row_index -1][column_index] = 1 unless row_index == 0
    @picture[row_index +1][column_index] = 1 unless row_index >= @row_length-1
    @picture[row_index][column_index -1] = 1 unless column_index == 0
    @picture[row_index] [column_index +1] = 1 unless column_index >= @column_length-1
  end

  def bluraction
    num = []

    @picture.each_with_index do |row_arr, row_index|
      row_arr.each_with_index do |cell, column_index|
      if cell == 1
        num << [row_index, column_index]
      end
     end
    end
     num.each do |coordinates|
    row = coordinates[0]
    col = coordinates[1]
    self.transform(row, col)
  end
end

end

image = Image.new([
  [0, 0, 0, 0],
  [0, 1, 0, 0],
  [0, 0, 0, 1],
  [0, 0, 0, 0]
])
puts "old array"
image.output_image
puts "-------"
puts "new array"
image.bluraction
image.output_image

